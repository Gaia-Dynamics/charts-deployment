{{- if and .Values.rds .Values.rds.clusters }}
{{- range .Values.rds.clusters }}
{{- if and .syncToSecretsManager .syncToSecretsManager.createExternalSecretForApps }}
---
# ============================================================================
# QA/PROD CLUSTER RESOURCES
# These resources are deployed to the application cluster (qa/prod)
# They pull credentials from AWS Secrets Manager for use by applications
# Deploy this with ArgoCD targeting the QA/Prod cluster
# ============================================================================

# ExternalSecret: Pulls RDS credentials from AWS Secrets Manager
# Applications reference this secret for database access
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .name }}-db-credentials
  namespace: {{ .syncToSecretsManager.appNamespace | default "default" }}
  labels:
    helm.sh/chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    app.kubernetes.io/name: {{ .name }}
    app.kubernetes.io/managed-by: crossplane
    environment: {{ $.Values.global.environment }}
    cluster: {{ $.Values.global.environment }}
    db-credentials: "true"
spec:
  refreshInterval: {{ .syncToSecretsManager.refreshInterval | default "5m" }}
  secretStoreRef:
    kind: {{ .syncToSecretsManager.appSecretStoreKind | default "ClusterSecretStore" }}
    name: {{ .syncToSecretsManager.appSecretStoreRef | default "aws-secretsmanager" }}
  target:
    name: {{ .name }}-db-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      {{- if eq (.engine | default "aurora-postgresql") "aurora-postgresql" }}
      data:
        # Standard PostgreSQL connection variables
        POSTGRES_HOST: "{{ `{{ .endpoint }}` }}"
        POSTGRES_PORT: "{{ `{{ .port }}` }}"
        POSTGRES_DB: "{{ `{{ .dbname }}` }}"
        POSTGRES_USER: "{{ `{{ .username }}` }}"
        POSTGRES_PASSWORD: "{{ `{{ .password }}` }}"
        # Connection URL
        DATABASE_URL: "postgresql://{{ `{{ .username }}` }}:{{ `{{ .password }}` }}@{{ `{{ .endpoint }}` }}:{{ `{{ .port }}` }}/{{ `{{ .dbname }}` }}"
        # Alternative formats
        DB_HOST: "{{ `{{ .endpoint }}` }}"
        DB_PORT: "{{ `{{ .port }}` }}"
        DB_NAME: "{{ `{{ .dbname }}` }}"
        DB_USER: "{{ `{{ .username }}` }}"
        DB_PASSWORD: "{{ `{{ .password }}` }}"
      {{- else if eq .engine "aurora-mysql" }}
      data:
        # Standard MySQL connection variables
        MYSQL_HOST: "{{ `{{ .endpoint }}` }}"
        MYSQL_PORT: "{{ `{{ .port }}` }}"
        MYSQL_DATABASE: "{{ `{{ .dbname }}` }}"
        MYSQL_USER: "{{ `{{ .username }}` }}"
        MYSQL_PASSWORD: "{{ `{{ .password }}` }}"
        # Connection URL
        DATABASE_URL: "mysql://{{ `{{ .username }}` }}:{{ `{{ .password }}` }}@{{ `{{ .endpoint }}` }}:{{ `{{ .port }}` }}/{{ `{{ .dbname }}` }}"
        # Alternative formats
        DB_HOST: "{{ `{{ .endpoint }}` }}"
        DB_PORT: "{{ `{{ .port }}` }}"
        DB_NAME: "{{ `{{ .dbname }}` }}"
        DB_USER: "{{ `{{ .username }}` }}"
        DB_PASSWORD: "{{ `{{ .password }}` }}"
      {{- end }}
  dataFrom:
    - extract:
        key: {{ .syncToSecretsManager.remoteKeyPrefix | default (printf "rds/%s/%s" $.Values.global.environment .name) }}
{{- end }}
{{- end }}
{{- end }}

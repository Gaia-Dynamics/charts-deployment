{{- if and .Values.rds .Values.rds.clusters }}
{{- range .Values.rds.clusters }}
---
# ============================================================================
# PushSecret - Sync RDS credentials to AWS Secrets Manager
# ============================================================================
# This resource runs in the TOOLS cluster and pushes Crossplane-generated
# RDS credentials to the QA/Prod AWS account's Secrets Manager.
#
# Flow:
#   1. Crossplane creates RDS and writes connection secret to tools cluster
#   2. PushSecret reads that secret and pushes to QA/Prod Secrets Manager
#   3. Apps in QA/Prod cluster pull via ExternalSecret
# ============================================================================

apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: {{ .name }}-push-secret
  namespace: {{ $.Values.global.namespace | default "crossplane-system" }}
  labels:
    helm.sh/chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    app.kubernetes.io/name: {{ .name }}
    app.kubernetes.io/managed-by: crossplane
    environment: {{ $.Values.global.environment }}
  annotations:
    argocd.argoproj.io/sync-wave: "15"  # Deploy after RDS cluster is ready
spec:
  refreshInterval: 30s  # Check for secret updates every 30 seconds
  deletionPolicy: Delete  # Delete remote secret properties when removed from PushSecret
  updatePolicy: Replace   # Replace all properties in remote secret (don't merge)

  # Use environment-specific ClusterSecretStore (aws-secretsmanager-qa or aws-secretsmanager-prod)
  # This provides cross-account access to write to QA/Prod Secrets Manager
  secretStoreRefs:
    - name: aws-secretsmanager-{{ $.Values.global.environment }}
      kind: ClusterSecretStore

  # Source: Read the Crossplane-generated connection secret
  selector:
    secret:
      name: {{ .name }}-connection-info

  # Template: Transform Crossplane keys to environment variables (customizable via secretKeyNames)
  template:
    data:
      {{ if .secretKeyNames }}{{ .secretKeyNames.host | default "RDS_CLSTER_HOST" }}{{ else }}RDS_CLSTER_HOST{{ end }}: {{ `"{{ .endpoint }}"` }}
      {{ if .secretKeyNames }}{{ .secretKeyNames.port | default "RDS_CLSTER_PORT" }}{{ else }}RDS_CLSTER_PORT{{ end }}: {{ `"{{ .port }}"` }}
      {{ if .secretKeyNames }}{{ .secretKeyNames.user | default "RDS_CLSTER_USER" }}{{ else }}RDS_CLSTER_USER{{ end }}: {{ `"{{ .master_username }}"` }}
      {{ if .secretKeyNames }}{{ .secretKeyNames.password | default "RDS_CLSTER_PASSWORD" }}{{ else }}RDS_CLSTER_PASSWORD{{ end }}: {{ `"{{ index . \"attribute.master_password\" }}"` }}
      {{ if .secretKeyNames }}{{ .secretKeyNames.database | default "RDS_CLSTER_DB" }}{{ else }}RDS_CLSTER_DB{{ end }}: "{{ .databaseName | default "postgres" }}"
      {{ if .secretKeyNames }}{{ .secretKeyNames.readOnlyHost | default "RDS_CLSTER_HOST_READ_ONLY" }}{{ else }}RDS_CLSTER_HOST_READ_ONLY{{ end }}: {{ `"{{ .reader_endpoint }}"` }}
      {{- if .secretKeyNames }}
      {{- if .secretKeyNames.urls }}
      {{- $clusterDatabase := .databaseName | default "postgres" }}
      {{- range .secretKeyNames.urls }}
      {{ .name }}: {{ `"` }}{{ .driver | default "postgresql+psycopg" }}{{ `://{{ .master_username }}:{{ index . \"attribute.master_password\" }}@{{ .endpoint }}:{{ .port }}/` }}{{ .database | default $clusterDatabase }}{{ `"` }}
      {{- end }}
      {{- else if .secretKeyNames.url }}
      {{ .secretKeyNames.url }}: {{ `"postgresql+psycopg://{{ .master_username }}:{{ index . \"attribute.master_password\" }}@{{ .endpoint }}:{{ .port }}/` }}{{ .databaseName | default "postgres" }}{{ `"` }}
      {{- end }}
      {{- end }}

  # Destination: Push to AWS Secrets Manager
  # Note: AWS stores JSON objects as SecretBinary (this is normal AWS behavior)
  # The data is identical and fully usable by applications
  data:
    - match:
        secretKey: {{ if .secretKeyNames }}{{ .secretKeyNames.host | default "RDS_CLSTER_HOST" }}{{ else }}RDS_CLSTER_HOST{{ end }}
        remoteRef:
          remoteKey: {{ $.Values.global.environment }}/rds/{{ .name }}
          property: {{ if .secretKeyNames }}{{ .secretKeyNames.host | default "RDS_CLSTER_HOST" }}{{ else }}RDS_CLSTER_HOST{{ end }}
    - match:
        secretKey: {{ if .secretKeyNames }}{{ .secretKeyNames.port | default "RDS_CLSTER_PORT" }}{{ else }}RDS_CLSTER_PORT{{ end }}
        remoteRef:
          remoteKey: {{ $.Values.global.environment }}/rds/{{ .name }}
          property: {{ if .secretKeyNames }}{{ .secretKeyNames.port | default "RDS_CLSTER_PORT" }}{{ else }}RDS_CLSTER_PORT{{ end }}
    - match:
        secretKey: {{ if .secretKeyNames }}{{ .secretKeyNames.user | default "RDS_CLSTER_USER" }}{{ else }}RDS_CLSTER_USER{{ end }}
        remoteRef:
          remoteKey: {{ $.Values.global.environment }}/rds/{{ .name }}
          property: {{ if .secretKeyNames }}{{ .secretKeyNames.user | default "RDS_CLSTER_USER" }}{{ else }}RDS_CLSTER_USER{{ end }}
    - match:
        secretKey: {{ if .secretKeyNames }}{{ .secretKeyNames.password | default "RDS_CLSTER_PASSWORD" }}{{ else }}RDS_CLSTER_PASSWORD{{ end }}
        remoteRef:
          remoteKey: {{ $.Values.global.environment }}/rds/{{ .name }}
          property: {{ if .secretKeyNames }}{{ .secretKeyNames.password | default "RDS_CLSTER_PASSWORD" }}{{ else }}RDS_CLSTER_PASSWORD{{ end }}
    - match:
        secretKey: {{ if .secretKeyNames }}{{ .secretKeyNames.database | default "RDS_CLSTER_DB" }}{{ else }}RDS_CLSTER_DB{{ end }}
        remoteRef:
          remoteKey: {{ $.Values.global.environment }}/rds/{{ .name }}
          property: {{ if .secretKeyNames }}{{ .secretKeyNames.database | default "RDS_CLSTER_DB" }}{{ else }}RDS_CLSTER_DB{{ end }}
    - match:
        secretKey: {{ if .secretKeyNames }}{{ .secretKeyNames.readOnlyHost | default "RDS_CLSTER_HOST_READ_ONLY" }}{{ else }}RDS_CLSTER_HOST_READ_ONLY{{ end }}
        remoteRef:
          remoteKey: {{ $.Values.global.environment }}/rds/{{ .name }}
          property: {{ if .secretKeyNames }}{{ .secretKeyNames.readOnlyHost | default "RDS_CLSTER_HOST_READ_ONLY" }}{{ else }}RDS_CLSTER_HOST_READ_ONLY{{ end }}
    {{- if .secretKeyNames }}
    {{- if .secretKeyNames.urls }}
    {{- range .secretKeyNames.urls }}
    - match:
        secretKey: {{ .name }}
        remoteRef:
          remoteKey: {{ $.Values.global.environment }}/rds/{{ $.name }}
          property: {{ .name }}
    {{- end }}
    {{- else if .secretKeyNames.url }}
    - match:
        secretKey: {{ .secretKeyNames.url }}
        remoteRef:
          remoteKey: {{ $.Values.global.environment }}/rds/{{ .name }}
          property: {{ .secretKeyNames.url }}
    {{- end }}
    {{- end }}

{{- end }}
{{- end }}

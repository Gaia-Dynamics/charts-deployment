{{- if and .Values.rds .Values.rds.clusters }}
{{- range .Values.rds.clusters }}
{{- if and .syncToSecretsManager .syncToSecretsManager.enabled }}
---
# ============================================================================
# TOOLS CLUSTER ONLY - PushSecret
# ============================================================================
# This resource MUST be deployed to the tools cluster (where Crossplane runs).
# It reads the Crossplane-generated secret and pushes credentials to AWS Secrets Manager.
#
# IMPORTANT: This chart should be deployed via ArgoCD targeting the TOOLS cluster.
# The ExternalSecret for QA/Prod clusters should be created separately.
# ============================================================================

# PushSecret: Reads Crossplane connection secrets and pushes to AWS Secrets Manager
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: {{ .name }}-connection-push
  namespace: {{ $.Values.global.namespace | default "crossplane-system" }}
  labels:
    helm.sh/chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    app.kubernetes.io/name: {{ .name }}
    app.kubernetes.io/managed-by: crossplane
    environment: {{ $.Values.global.environment }}
    cluster: tools
  annotations:
    argocd.argoproj.io/sync-wave: "10"  # Deploy after RDS cluster (wave 0)
spec:
  refreshInterval: 10s
  secretStoreRefs:
    - name: {{ .syncToSecretsManager.secretStoreRef | default "aws-secretsmanager" }}
      kind: {{ .syncToSecretsManager.secretStoreKind | default "ClusterSecretStore" }}
  selector:
    secret:
      name: {{ .name }}-connection-info
  data:
    - match:
        secretKey: ".*"
        remoteRef:
          remoteKey: {{ .syncToSecretsManager.remoteKeyPrefix | default (printf "rds/%s/%s" $.Values.global.environment .name) }}
{{- end }}

{{- end }}
{{- end }}
